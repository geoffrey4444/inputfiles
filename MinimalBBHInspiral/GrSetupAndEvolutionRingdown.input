DataBoxItems =
    ReadFromFile(File=SpatialCoordMap.input),
    Domain
    (Items=
     AddSpectralFilterController(
       SpectralFilterController = ExpCheb(
         FilterLabelDefault=ExpCheb;
         SubdomainFilterLabelForS2=KillTop;
         BoundaryFilterLabelDefault=BdryExpCheb;
         BoundaryFilterLabelForS2=BdryKillTop;
         ProjectVolumeChangesOntoSlices = yes;
         IncludeSlicesInDiag = yes;
         Verbose=no;
         LimitsOnExpChebHalfPower=
         Sphere*
         (MinAllowedValueForI1        = 28;
          # don't usually filter on I1
          RequiredMaxValueForI1       = <<None>>;
          # S2=<<None>> means KillTop only
          MinAllowedValueForS2        = 28;
          RequiredMaxValueForS2       = <<None>>;),
         Cylinder*
         (MinAllowedValueForI1        = 28;
          RequiredMaxValueForI1       = 32;
          MinAllowedValueForS1        = 20;
          RequiredMaxValueForS1       = 24;),
         FilledCylinder*
         (MinAllowedValueForI1        = 28;
          RequiredMaxValueForI1       = 32;
          MinAllowedValueForB2        = 20;
          RequiredMaxValueForB2       = 24;
          # we usually don't filter B2Radial
          MinAllowedValueForB2Radial  = 28;
          RequiredMaxValueForB2Radial = <<None>>;),
         Slice*.Cylinder*
         (MinAllowedValueForI1        = 28;
          RequiredMaxValueForI1       = 32;
          MinAllowedValueForS1        = 20;
          RequiredMaxValueForS1       = 24;),
         SliceFUF.FilledCylinder*
         (MinAllowedValueForI1        = 28;
          RequiredMaxValueForI1       = <<None>>;
          MinAllowedValueForS1        = 20;
          RequiredMaxValueForS1       = <<None>>;),
         Slice?FF.FilledCylinder*
         (MinAllowedValueForB2        = 20;
          RequiredMaxValueForB2       = 24;
          MinAllowedValueForB2Radial  = 28;
          RequiredMaxValueForB2Radial = <<None>>;),
         Slice*.Sphere*
         (MinAllowedValueForS2        = 28;
          RequiredMaxValueForS2       = <<None>>;);
         );
       );
    ),
    Subdomain
    (Items=
     EvaluateScalarFormula(Output=ZeroScalar;Formula=0.;),
     EvaluateVectorFormula(Output=Zero4Vector;
                           V[0]=0.; V[1]=0.; V[2]=0.; V[3]=0.;),
     EvaluateVectorFormula(Output=Zero3Vector;
                           V[0]=0.; V[1]=0.; V[2]=0.;),
     GlobalDifferentiator
     (GlobalDifferentiator=
      MatrixMultiply(MultiDim_by_BasisFunction=yes;
              TopologicalDifferentiator
               =Spectral(SetBasisFunctionsFromTimingInfo=yes;
                         # BasisFunctions= (ChebyshevGaussLobatto=ChebyshevGaussLobattoMatrix);
                         )
               );
      ),
     GlobalIntegrator
     (Integrator
      =Spectral(BasisFunctions=
                (ChebyshevGaussLobatto=ChebyshevGaussLobattoMatrix);
                );
      );
     );
